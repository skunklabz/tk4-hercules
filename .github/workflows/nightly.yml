name: Nightly Build and Test

on:
  schedule:
    # Run every day at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch: # Allow manual triggering

jobs:
  nightly-test:
    name: Nightly Comprehensive Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: nightly-${{ github.sha }}
        restore-keys: |
          nightly-
    
    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        tags: tk4-hercules:nightly
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
    
    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache
    
    - name: Run comprehensive tests
      run: |
        echo "🧪 Running comprehensive nightly tests..."
        chmod +x scripts/test/*.sh
        chmod +x scripts/validation/*.sh
        
        # Run all validation scripts
        ./scripts/validation/quick-validate.sh
        ./scripts/validation/validate-exercises.sh
        
        # Run comprehensive tests
        ./scripts/test/test-exercises.sh
      timeout-minutes: 45
    
    - name: Test container stability
      run: |
        echo "🐳 Testing container stability..."
        docker compose up -d
        
        # Wait for container to be ready
        sleep 60
        
        # Test container stays running for 10 minutes
        for i in {1..60}; do
          if ! docker compose ps | grep -q "Up"; then
            echo "❌ Container stopped unexpectedly"
            docker compose logs
            exit 1
          fi
          echo "✅ Container still running (minute $i/60)"
          sleep 10
        done
        
        # Cleanup
        docker compose down
    
    - name: Test all Makefile commands
      run: |
        echo "🔧 Testing all Makefile commands..."
        make help
        make test-quick
        make validate
        make lint
        make info
    
    - name: Check system resources
      run: |
        echo "💾 Checking system resource usage..."
        docker compose up -d
        sleep 30
        
        # Check memory usage
        MEMORY_USAGE=$(docker stats --no-stream --format "table {{.MemUsage}}" tk4-hercules-tk4-hercules-1 | tail -1)
        echo "Memory usage: $MEMORY_USAGE"
        
        # Check disk usage
        DISK_USAGE=$(docker system df)
        echo "Disk usage:"
        echo "$DISK_USAGE"
        
        docker compose down
    
    - name: Generate test report
      run: |
        echo "📊 Generating nightly test report..."
        echo "Nightly Test Report - $(date)" > nightly-report.txt
        echo "=================================" >> nightly-report.txt
        echo "" >> nightly-report.txt
        echo "✅ All tests completed successfully" >> nightly-report.txt
        echo "✅ Docker image built successfully" >> nightly-report.txt
        echo "✅ Container stability verified" >> nightly-report.txt
        echo "✅ Makefile commands working" >> nightly-report.txt
        echo "" >> nightly-report.txt
        echo "Report generated at: $(date)" >> nightly-report.txt
    
    - name: Upload test report
      uses: actions/upload-artifact@v4
      with:
        name: nightly-test-report
        path: nightly-report.txt
        retention-days: 7

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
    
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'
    
    - name: Run CodeQL analysis
      uses: github/codeql-action/init@v3
      with:
        languages: javascript, python
    
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3 