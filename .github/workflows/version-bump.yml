name: Version Bump

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
        - patch
        - minor
        - major

jobs:
  version-bump:
    name: Create Version Bump PR
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Get current version
      id: version
      run: |
        CURRENT_VERSION=$(cat VERSION | tr -d ' ')
        echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
        echo "Current version: $CURRENT_VERSION"
    
    - name: Determine new version
      id: new_version
      run: |
        VERSION_TYPE="${{ github.event.inputs.version_type }}"
        CURRENT_VERSION="${{ steps.version.outputs.current_version }}"
        
        case $VERSION_TYPE in
          "major")
            NEW_VERSION=$(echo $CURRENT_VERSION | awk -F. '{print $1+1".0.0"}')
            ;;
          "minor")
            NEW_VERSION=$(echo $CURRENT_VERSION | awk -F. '{print $1"."$2+1".0"}')
            ;;
          "patch")
            NEW_VERSION=$(echo $CURRENT_VERSION | awk -F. '{print $1"."$2"."$3+1}')
            ;;
        esac
        
        echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
        echo "New version: $NEW_VERSION"
    
    - name: Create version bump branch
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git checkout -b "version-bump-${{ steps.new_version.outputs.new_version }}"
    
    - name: Update VERSION file
      run: |
        echo "${{ steps.new_version.outputs.new_version }}" > VERSION
        echo "Updated VERSION file to ${{ steps.new_version.outputs.new_version }}"
    
    - name: Update CHANGELOG
      run: |
        NEW_VERSION="${{ steps.new_version.outputs.new_version }}"
        TODAY=$(date +%Y-%m-%d)
        
        # Move unreleased changes to new version
        sed -i "s/## \[Unreleased\]/## \[$NEW_VERSION\] - $TODAY\n\n## [Unreleased]/" CHANGELOG.md
        
        echo "Updated CHANGELOG.md for version $NEW_VERSION"
    
    - name: Commit and push changes
      run: |
        git add VERSION CHANGELOG.md
        git commit -m "chore: bump version to ${{ steps.new_version.outputs.new_version }}"
        git push origin "version-bump-${{ steps.new_version.outputs.new_version }}"
    
    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        branch: "version-bump-${{ steps.new_version.outputs.new_version }}"
        title: "chore: bump version to ${{ steps.new_version.outputs.new_version }}"
        body: |
          ## Version Bump
          
          This PR bumps the version from ${{ steps.version.outputs.current_version }} to ${{ steps.new_version.outputs.new_version }}.
          
          ### Changes:
          - Updated VERSION file
          - Updated CHANGELOG.md with release date
          
          ### Version Type: ${{ github.event.inputs.version_type }}
          
          Please review and merge to trigger the release workflow.
        base: main
        delete-branch: true 