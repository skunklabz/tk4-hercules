services:
  # LMS Web Application
  lms-app:
    build:
      context: .
      dockerfile: Dockerfile.test
    container_name: tk4-hercules-lms-app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=test
      - PORT=3000
      - CI=true
    volumes:
      - ./public:/app/public
      - ../examples:/app/examples
    command: npm start
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    profiles:
      - integration
      - all
      - debug

  # Unit Tests
  test-unit:
    build:
      context: .
      dockerfile: Dockerfile.test
    container_name: tk4-hercules-test-unit
    volumes:
      - ./test-results:/app/test-results
      - ./coverage:/app/coverage
    environment:
      - NODE_ENV=test
      - CI=true
    command: npm run test:unit:coverage
    profiles:
      - unit
      - all

  # Integration Tests with Playwright
  test-integration:
    build:
      context: .
      dockerfile: Dockerfile.test
    container_name: tk4-hercules-test-integration
    volumes:
      - ./test-results:/app/test-results
      - ./playwright-report:/app/playwright-report
    environment:
      - NODE_ENV=test
      - CI=true
      - BASE_URL=http://lms-app:3000
    command: npm run test
    depends_on:
      lms-app:
        condition: service_healthy
    # Recommended Playwright Docker configuration
    init: true
    ipc: host
    cap_add:
      - SYS_ADMIN
    profiles:
      - integration
      - all

  # All Tests
  test-all:
    build:
      context: .
      dockerfile: Dockerfile.test
    container_name: tk4-hercules-test-all
    volumes:
      - ./test-results:/app/test-results
      - ./coverage:/app/coverage
      - ./playwright-report:/app/playwright-report
    environment:
      - NODE_ENV=test
      - CI=true
      - BASE_URL=http://lms-app:3000
    command: npm run test:all
    depends_on:
      lms-app:
        condition: service_healthy
    # Recommended Playwright Docker configuration
    init: true
    ipc: host
    cap_add:
      - SYS_ADMIN
    profiles:
      - all

  # Debug Tests
  test-debug:
    build:
      context: .
      dockerfile: Dockerfile.test
    container_name: tk4-hercules-test-debug
    volumes:
      - ./test-results:/app/test-results
      - ./coverage:/app/coverage
      - ./playwright-report:/app/playwright-report
    environment:
      - NODE_ENV=test
      - CI=false
      - BASE_URL=http://lms-app:3000
    command: npm run test:debug
    depends_on:
      lms-app:
        condition: service_healthy
    # Recommended Playwright Docker configuration
    init: true
    ipc: host
    cap_add:
      - SYS_ADMIN
    profiles:
      - debug

volumes:
  # Test volumes
  test-results:
  coverage:
  playwright-report: 